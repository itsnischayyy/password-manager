# ---- Base Stage ----
FROM node:20-alpine AS base
WORKDIR /app
RUN npm install -g pnpm@8

# ---- Dependencies Stage ----
FROM base AS deps
WORKDIR /app
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY packages/frontend/package.json ./packages/frontend/
COPY packages/backend/package.json ./packages/backend/
RUN pnpm install

# ---- Build Stage ----
FROM base AS builder
WORKDIR /app
# First, copy the installed dependencies from the 'deps' stage
COPY --from=deps /app/node_modules ./node_modules
# Then, copy the source code
COPY . .

# Run the build script.
RUN pnpm --filter backend build

# ---- Production Stage ----
FROM base AS production
WORKDIR /app
COPY --from=builder /app/packages/backend/dist ./packages/backend/dist
COPY --from=builder /app/packages/backend/package.json ./packages/backend/package.json
COPY --from=builder /app/packages/backend/OPENAPI.yaml ./packages/backend/OPENAPI.yaml
COPY --from=builder /app/pnpm-workspace.yaml ./
COPY --from=builder /app/pnpm-lock.yaml ./
# Re-install only production dependencies.
RUN pnpm install --prod --filter backend

EXPOSE 5001
CMD ["pnpm", "--dir=./packages/backend", "start"]