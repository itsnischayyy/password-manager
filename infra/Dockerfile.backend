# ---- Base Stage ----
FROM node:20-alpine AS base
WORKDIR /app
RUN npm install -g pnpm@8
ENV PATH /app/node_modules/.bin:$PATH

# ---- Dependencies Stage ----
FROM base AS deps
WORKDIR /app
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY packages/frontend/package.json ./packages/frontend/
COPY packages/backend/package.json ./packages/backend/
RUN pnpm install --shamefully-hoist

# ---- Build Stage ----
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN pnpm --filter backend build && pnpm --filter backend exec tsc-alias

# ---- Production Stage ----
FROM node:20-alpine
WORKDIR /app
ENV NODE_ENV=production

# Copy necessary monorepo config files and install production dependencies
COPY package.json pnpm-workspace.yaml ./
COPY packages/backend/package.json ./packages/backend/
RUN npm install -g pnpm@8 && \
    pnpm install --prod --filter=backend

# Copy the built and alias-resolved backend code from the builder stage
COPY --from=builder /app/packages/backend/dist ./packages/backend/dist
COPY --from=builder /app/packages/backend/OPENAPI.yaml ./packages/backend/OPENAPI.yaml

EXPOSE 5001

CMD ["node", "--enable-source-maps", "packages/backend/dist/server.js"]